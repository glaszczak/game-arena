# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PageInfo {
  startCursor: String!
  endCursor: String!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type Team {
  id: ID!
  createdAt: DateTime!
  name: String!
  players: [Player!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type TeamEdge {
  cursor: String!
  node: Team!
}

type TeamConnection {
  edges: [TeamEdge!]!
  pageInfo: PageInfo!
  previousCount: Int!
  currentCount: Int!
}

type Match {
  id: ID!
  createdAt: DateTime!
  location: String!
  date: DateTime!
  time: String!
  players: [Player!]
  teams: [Team!]!
}

type MatchEdge {
  cursor: String!
  node: Match!
}

type MatchConnection {
  edges: [MatchEdge!]!
  pageInfo: PageInfo!
  previousCount: Int!
  currentCount: Int!
}

type Player {
  id: ID!
  createdAt: DateTime!
  firstName: String!
  lastName: String!
  number: Float!
  team: Team
  matches: [Match!]
}

type PlayerEdge {
  cursor: String!
  node: Player!
}

type PlayerConnection {
  edges: [PlayerEdge!]!
  pageInfo: PageInfo!
  previousCount: Int!
  currentCount: Int!
}

type Query {
  players(first: Int, last: Int, after: Int, before: Int, order: QueryOrder): PlayerConnection!
  teamPerPlayer(playerId: Int!): Team!
  matchesPerPlayer(playerId: Int!): [Match!]!
  teams(first: Int, last: Int, after: Int, before: Int, order: QueryOrder): TeamConnection!
  playersPerTeam(teamId: Int!): [Player!]!
  matches(first: Int, last: Int, after: Int, before: Int, order: QueryOrder): MatchConnection!
  teamsWithPlayersPerMatch(matchId: Int!): [Team!]!
}

enum QueryOrder {
  ASC
  DESC
}